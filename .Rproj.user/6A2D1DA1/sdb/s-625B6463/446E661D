{
    "contents" : "#' Fit an adaptive lasso model.\n#'\n#' This function produces a linear regression model via the adaptive lasso. Given a formula, a data.frame, and a selection.method, \\code{adapt} will fit a linear model for the predictor in the formula, using the data, that minimizes the selection.method.\n#'\n#' @param formula A formula listing the response and covariates\n#' @param data A data.frame containing the data to use in building the model.\n#' @param adapt Whether or not to use adaptive weights in the lasso\n#' @param selection.method The selection criterion to minimize in model fitting\n#' @param selectonly Use the adaptive lasso only for selection, doing coefficient estimation via OLS?\n#'\n#' @export\nadapt <- function(formula, data, adapt=TRUE, selection.method='AICc', selectonly=FALSE) {\n    #Create the object that will hold the output\n    result = list()\n    class(result) = \"adapt\"\n    result[['formula']] = as.formula(formula, env=data)\n    result[['selectonly']] = selectonly\n\n    #Drop any rows with NA values\n    na.rows = (which(is.na(data))-1) %% dim(data)[1] + 1\n    if (length(na.rows)>0)\n        data = data[-na.rows,]\n    result[['data']] = data\n\n    #Pull out the relevant data\n    result[['response']] = rownames(attr(terms(formula, data=data), 'factors'))[1]\n    result[['predictors']] = attr(terms(formula, data=data), 'term.labels')\n    response.col = which(colnames(data)==result[['response']])\n\n    f = as.formula(paste(paste(result[['response']], \"~\", sep=''), paste(result[['predictors']], collapse='+'), sep=''), env=as.environment(data))\n    if (adapt) {\n        result[['adapt']] = adaptive.weights(formula=f, data=data)\n    } else {\n        result[['adapt']] = NULL\n    }\n\n    result[['lars']] = adapt.step(formula=formula, data=data, adaptive.object=result[['adapt']], selection.method=selection.method, adapt=adapt)\n    result[['lambda']] = result[['lars']][['model']][['lambda']][result[['lars']][['lambda.index']]]\n\n    if (selectonly) {\n        variables = paste(result[['lars']][['vars']], collapse=\"+\")\n        f = as.formula(paste(result[['response']], \"~\", variables, sep=\"\"))\n        m = lm(formula=f, data=data)\n        result[['lm']] = m\n        result[['coef']] = coef(m)\n        result[['fitted']] = m$fitted\n        result[['residuals']] = m$residuals\n        result[['actual']] = m$fitted + m$residuals\n    } else {\n        result[['coef']] = result[['lars']][['coef']]\n        result[['actual']] = data[,response.col]\n        result[['fitted']] = predict.adapt(result, data)\n        result[['residuals']] = result[['actual']] - result[['fitted']]\n    }\n\n    return(result)\n}\n\n",
    "created" : 1406740733863.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "115405514",
    "id" : "446E661D",
    "lastKnownWriteTime" : 1406741299,
    "path" : "C:/Users/wrbrooks/git/adapt/R/adapt.R",
    "project_path" : "R/adapt.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}